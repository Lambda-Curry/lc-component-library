// TODO: Replace these with tailwind colors and CSS variables
$black: #282d30;
$green: #5bd067;
$purple: #7854f6;
$yellow: #f99b0f;

$light-red: #ed5f5f;
$red: #d65858;

$app-red: #d66245;
// TODO: this is pretty close to the green we already use, we can see if Marcus wants to consolidate colors
// $app-green: #3fc053;

$dark-gray: #707070;
$gray: #a0a5ba;
$light-gray: #bdbdbd;
$lighter-gray: #e2e2e2;
$lightest-gray: #f5f6fa;

$light-bluegray: #eef4ff;

$dark-blue: #0021cb;
$blue: #0054fe;
$light-blue: #017aff;
$lighter-blue: #1785cc;
$lightest-blue: #4ab8ff;

$text-color: $black;
$text-color-light: $gray;

:root {
  --primary_color: #0021cb;
  --primary_color_dark: #001aa3;
  --primary_button_text_color: white;
  --secondary_color: #017aff;
  --secondary_color_dark: #0063d1;
  --secondary_button_text_color: white;
}

@use "sass:map";

$default-button-height: 48px;
$default-button-text-color: $dark-gray;
$default-button-bg-color: #ededed;
$default-button-font-size: 14px;
$default-button-border-radius: 6px;
$default-button-font-weight: bold;
$default-button-padding: 14px 20px;

$primary-button-bg-color: var(--primary_color);
$primary-button-bg-color-dark: var(--primary_color_dark);
$primary-button-text-color: var(--primary_button_text_color);
$accent-button-bg-color: var(--secondary_color);
$accent-button-bg-color-dark: var(--secondary_color_dark);
$accent-button-text-color: var(--secondary_button_text_color);
$success-button-bg-color: $green;
$success-button-bg-color-dark: darken($green, 20%);
$success-button-text-color: white;
$danger-button-bg-color: $red;
$danger-button-bg-color-dark: darken($red, 20%);
$danger-button-text-color: white;
$outline-button-bg-color: transparent;
$outline-button-bg-color-dark: $lightest-gray;
$outline-button-text-color: $default-button-text-color;
$outline-button-border-color: $lighter-gray;

$button-types: 'primary', 'accent', 'success', 'outline', 'danger';
$button-bg-colors: (
  'primary': $primary-button-bg-color,
  'accent': $accent-button-bg-color,
  'success': $success-button-bg-color,
  'danger': $danger-button-bg-color,
  'outline': $outline-button-bg-color
);
$button-bg-colors-dark: (
  'primary': $primary-button-bg-color-dark,
  'accent': $accent-button-bg-color-dark,
  'success': $success-button-bg-color-dark,
  'danger': $danger-button-bg-color-dark,
  'outline': $outline-button-bg-color-dark
);
$button-text-colors: (
  'primary': $primary-button-text-color,
  'accent': $accent-button-text-color,
  'success': $success-button-text-color,
  'danger': $danger-button-text-color,
  'outline': $outline-button-text-color
);

.button {
  zoom: unset;
  display: inline-block;
  text-decoration: none;
  cursor: pointer;
  text-align: center;

  // Note: Currently setting to 1, but will need to be updated to a new strategy if we ever need buttons where the text
  // can run long and have ellipses (...)
  line-height: 1;

  min-height: $default-button-height;
  color: $default-button-text-color;
  background-color: $default-button-bg-color;
  font-size: $default-button-font-size;
  font-weight: $default-button-font-weight;
  border-radius: $default-button-border-radius;
  border: 1px solid $default-button-bg-color;
  padding: $default-button-padding;

  // Default Button Hover State
  &:hover:not([disabled]) {
    background-color: darken($default-button-bg-color, 5%);
    color: darken($default-button-text-color, 20%);
    border-color: darken($default-button-bg-color, 5%);
    box-shadow: none !important;
  }

  &:active:not([disabled]) {
    transform: scale(0.98);
    color: darken($default-button-text-color, 20%);
    border-color: darken($default-button-bg-color, 5%);
  }

  &[disabled] {
    cursor: not-allowed;
    opacity: 0.6;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px #ffffff, 0 0 2px 3px $default-button-text-color;
    border-color: $default-button-bg-color;
    background-color: $default-button-bg-color;
    color: $default-button-text-color;
  }

  @each $button-type in $button-types {
    $background-color: map-get($button-bg-colors, $button-type);

    &-#{$button-type} {
      color: map-get($button-text-colors, $button-type);
      background-color: $background-color;
      border-color: $background-color;

      &:hover:not([disabled]) {
        background-color: map-get($button-bg-colors-dark, $button-type);
        color: map-get($button-text-colors, $button-type);
        border-color: map-get($button-bg-colors-dark, $button-type);
      }

      &:focus {
        outline: none;
        box-shadow: 0 0 0 2px #ffffff, 0 0 2px 3px $background-color;
        border-color: $background-color;
        background-color: $background-color;
        color: map-get($button-text-colors, $button-type);
      }

      &:active {
        background-color: map-get($button-bg-colors-dark, $button-type);
        color: map-get($button-text-colors, $button-type);
        border-color: map-get($button-bg-colors-dark, $button-type);
      }

      @if $button-type == outline {
        border-color: $outline-button-border-color;

        &:hover:not([disabled]) {
          background-color: $outline-button-bg-color-dark;
          color: darken($default-button-text-color, 20%);
          border-color: darken($outline-button-border-color, 5%);
        }

        &:focus {
          outline: none;
          box-shadow: 0 0 0 2px #ffffff, 0 0 2px 3px $default-button-text-color;
          background-color: $outline-button-bg-color-dark;
          color: $default-button-text-color;
        }

        &:active {
          background-color: $outline-button-bg-color-dark;
          color: map-get($button-text-colors, $button-type);
          border-color: map-get($button-bg-colors-dark, $button-type);
        }
      }
    }

    &-outline-#{$button-type} {
      background-color: transparent;
      border-color: $background-color;
      color: $background-color;

      &:hover:not([disabled]) {
        background-color: $background-color;
        color: map-get($button-text-colors, $button-type);
        border-color: map-get($button-bg-colors-dark, $button-type);
      }

      &:focus {
        outline: none;
        box-shadow: 0 0 0 2px #ffffff, 0 0 2px 3px $background-color;
        border-color: $background-color;
        background-color: $background-color;
        color: map-get($button-text-colors, $button-type);
      }

      &:active {
        background-color: map-get($button-bg-colors-dark, $button-type);
        color: map-get($button-text-colors, $button-type);
        border-color: map-get($button-bg-colors-dark, $button-type);
      }
    }
  }
}

// Styles taken from example: https://stackoverflow.com/questions/2460100/remove-the-complete-styling-of-an-html-button-submit/2462067
.button-unstyled {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  height: unset;
  min-height: unset;

  &:hover:not([disabled]) {
    background-color: transparent;
    color: inherit;
    border-color: transparent;
  }

  &:focus {
    outline: 1px dotted #212121;
    outline: 5px auto -webkit-focus-ring-color;
    outline: 5px auto var(--primary_color);
    box-shadow: none;
    background-color: transparent;
    color: inherit;
  }

  &:active:not([disabled]) {
    transform: scale(0.98);
    color: inherit;
    border-color: transparent;
    box-shadow: none !important;
    background-color: transparent;
  }
}

.button-disabled {
  cursor: not-allowed;
  opacity: 0.6;

  &:active {
    transform: scale(1);
  }
}

// TC-150 Fix for button within the alert panel, we can remove or update this when we update the alert component
.button.inPanel {
  display: flex;
  padding: 8px;
  min-height: 0;
  line-height: 12px;
  border: 1px solid white;
  margin-right: 40px;

  .buttonText {
    margin-right: 4px;
  }
}

.button-link {
  padding: 0;
  height: auto;
  line-height: inherit;
  min-height: 0;
  color: var(--blue);

  &:hover:not([disabled]),
  &:focus {
    color: var(--dark-blue);
  }
}
